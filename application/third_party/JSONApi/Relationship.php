<?php
/**
 * Created by PhpStorm.
 * User: vsergiu
 * Date: 4/10/19
 * Time: 4:38 PM
 */

namespace JSONApi;


class Relationship extends json_ready
{
    protected $data;
    private $type_one2one;
    protected $links;

    /**
     * @param $data
     * @param null $links
     * @return mixed
     * @throws \Exception
     */
    static function factory($data,$links=null)
    {
        if(!is_null($links) && !($links instanceof  Links))
            throw new \Exception("Invalid Links object");

        if(is_array($data))
            return self::factory_one2many($data,$links);

        if(is_object($data) || is_null($data))
            return self::factory_one2one($data,$links);

        throw new \Exception("Invalid relationship data");
    }

    /**
     * @param $data
     * @param $links
     * @return Relationship
     * @throws \Exception
     */
    static private function factory_one2many($data,$links)
    {
        $rs = new self(false);
        if(!is_null($links))
            $rs->setLinks($links);
        foreach ($data as $relData) {
            $rs->addRelation(
                ResourceIdentifier::factory($relData)
            );
        }
        return $rs;
    }

    /**
     * @param $data
     * @param Links $links
     * @return mixed
     * @throws \Exception
     */
    static private function factory_one2one($data,$links)
    {

        $rs = new self(true);
        if(!is_null($links))
            $rs->setLinks($links);

        if(is_null($data)) {
            $rs->addRelation(null);
            return $rs;
        }

        $rs->addRelation(
            ResourceIdentifier::factory($data)
        );
        return $rs;
    }

    /**
     * Relationships constructor.
     * @param $type_one2one
     */
    private function __construct ($type_one2one)
    {
        $this->type_one2one = $type_one2one;
        if(!$type_one2one)
            $this->data = [];
    }

    /**
     * @param $links
     * @return $this
     */
    function &setLinks($links)
    {
        $this->links = $links;
        return $this;
    }

    /**
     * @param ResourceIdentifier $rel
     */
    function addRelation($rel)
    {
        if($this->type_one2one)
            $this->data  = $rel;
        else
            $this->data[] = $rel;
    }



    function getRelation($name)
    {
        if(isset($this->rels[$name]))
            return $this->rels[$name];
        throw new \Exception("Invalid relation $name");
    }

    function json_data ()
    {
        if($this->type_one2one && is_null($this->data))
            return [
                "data"=>null,
                "links"=>$this->links
            ];
        return parent::json_data(); // TODO: Change the autogenerated stub
    }



}